# Global configuration
default:
  tags:
    - docker
  image: maven:3.9.4-eclipse-temurin-21  # Maven image with JDK 21 (adjust according to your Java version)

# Global variables
variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  #DOCKER_HOST: "tcp://docker:2375"
  #DOCKER_TLS_CERTDIR: "/certs"

# Maven cache to optimize builds
cache:
  paths:
    - .m2/repository
    - target/

# Pipeline stages
stages:
  - build
  - test
  - package
  - docker

# Project construction
build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean compile

# Unit and integration testing
test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    when: always

# Application package
package:
  stage: package
  script:
    - mvn $MAVEN_CLI_OPTS package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

# Building the Docker image
docker-build:
  stage: docker
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      alias: docker
      command: ["--tls=false"]
  variables:
    #DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_CERTDIR: ""
    #DOCKER_TLS_VERIFY: "1"
    #DOCKER_CERT_PATH: "/certs/client"
    #DOCKER_HOST: "tcp://docker:2376"
    DOCKER_HOST: "tcp://docker:2375"
    # Activation de BuildKit
    DOCKER_BUILDKIT: "1"
  before_script:
    # Secure Docker Login
    - |
      echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    # Simple check of Docker availability
    - |
      for i in $(seq 1 30); do
        if docker info > /dev/null 2>&1; then
          echo "Docker est prÃªt!"
          break
        fi
        echo "Attente de Docker... ($i/30)"
        sleep 1
      done
  script:
    # Using buildx to build
    - docker buildx create --use
    - docker buildx inspect --bootstrap
    - |
      docker buildx build \
        --push \
        --cache-from type=registry,ref=$CI_REGISTRY_IMAGE:cache \
        --cache-to type=registry,ref=$CI_REGISTRY_IMAGE:cache,mode=max \
        --target dev-final \
        --build-arg ACTIVE_PROFILE=dev \
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA \
        --tag $CI_REGISTRY_IMAGE:latest \
        .
  only:
    - main  # Only runs on the main branch