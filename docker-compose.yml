services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: springbootdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  product_management1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product_management1
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/springbootdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
      SERVER_PORT: 8080
      SERVER_ENV_DEV_ADDRESS: ${VM_IP}
      SERVER_ENV_DEV_PORT: 80
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 20s
      timeout: 5s
      retries: 5

  product_management2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product_management2
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/springbootdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
      SERVER_PORT: 8080
      SERVER_ENV_DEV_ADDRESS: ${VM_IP}
      SERVER_ENV_DEV_PORT: 80
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 20s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      product_management1:
        condition: service_healthy
      product_management2:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:

volumes:
  mysql-data: